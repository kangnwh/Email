drop table user_feedback;
drop table advertise_info;
drop table compliment_system;
drop table order_system;
drop table quote_system;
drop table prod_price_range;
drop table prod_pic_info;
drop table prod_info;
drop table prod_sub_cat;
drop table prod_cat;
drop table user;
drop table prod_profit_rate;
drop table remind_interval;
drop table supplier_pts_hist;
drop table supplier_rebate_ref;
drop table user_reward_ref;
drop table supplier;
drop view v_prod_price_range;


create table user
(
user_id int not null auto_increment,
user_name  varchar(100) not null,
password   varchar(50) not null,
email       varchar(50) not null,
valid_flg  int not null DEFAULT 0,
is_admin   int default 0,
logo_link varchar(200) ,
is_paid    int default 0,#提交订单的时候需要确认是否付会员费了
is_subscribe int default 0,
credit_points  int not null default 0,
user_create_ts  datetime default now(),
primary key(user_id),
unique key(user_name),
unique key(email),
index(user_id)
);

create table prod_cat
(
prod_cat_id    int not null auto_increment,
prod_cat_name  varchar(100) not null,
valid_flg      int not null DEFAULT 0,
prod_cat_desc  varchar(500) not null,
prod_cat_create_ts datetime default now(),
prod_cat_order int not null default 0,
primary key(prod_cat_id),
unique key(prod_cat_name),
index(prod_cat_id)
);

create table prod_sub_cat
(
prod_cat_sub_id   int not null auto_increment,
prod_cat_sub_name varchar(100) not null,
valid_flg      int not null DEFAULT 0,
prod_cat_sub_desc  varchar(500) not null,
prod_cat_id int not null,
prod_cat_sub_create_ts datetime default now(),
primary key(prod_cat_sub_id),
index(prod_cat_sub_id),
index(prod_cat_id),
unique key(prod_cat_sub_name),
foreign key (prod_cat_id) references prod_cat(prod_cat_id) on delete cascade on update cascade
);

create table supplier
(
supplier_id int not null auto_increment,
supplier_name  varchar(100) not null,
password   varchar(50) not null,
email       varchar(50) not null,
address    varchar(300),
valid_flg  int not null DEFAULT 0,
supplier_points int not null default 0,
tel    varchar(20),
supplier_create_ts  datetime default now(),
primary key(supplier_id),
unique key(supplier_name),
unique key(email),
index(supplier_id)
);

create table prod_info
(
prod_id   int not null auto_increment,
prod_name varchar(100) not null,
prod_desc varchar(500) not null,
lead_time varchar(200) ,
prod_size varchar(100) ,
imprint_size varchar(100) ,
price_basis varchar(200) ,
prod_cat_sub_id  int not null,
valid_flg      int not null DEFAULT 0,
approve_stat   int not null default 0,
is_special_price_flg int not null default 0,
special_price_old decimal(12,2) not null default 0,
special_price_new decimal(12,2) not null default 0,
special_price_campaign_time datetime,
is_clearance   int not null default 0,
is_new_prod    int not null default 0,
is_patent_prod int not null default 0,
is_hot_prod int not null default 0,
is_del_flg int not null default 0,
supplier_id    int not null,
prod_create_ts   datetime default now(),
colors varchar(100),
cover_img VARCHAR(200) NOT NULL,
primary key(prod_id),
index(prod_id),
index(prod_cat_sub_id),
foreign key (prod_cat_sub_id) references prod_sub_cat(prod_cat_sub_id) on delete cascade on update cascade,
foreign key (supplier_id) references supplier(supplier_id) on delete cascade on update cascade
);

create table prod_pic_info
(
prod_pic_id int not null auto_increment,
prod_id   int not null ,
img_desc    varchar(100) ,
image_path  varchar(100) ,
valid_flg      int not null DEFAULT 0,
prod_pic_create_ts   datetime default now(),
primary key(prod_pic_id),
index(prod_id),
foreign key (prod_id) references prod_info(prod_id) on delete cascade on update cascade
);




create table advertise_info
(
adv_id   int not null auto_increment,
adv_level varchar(50) not null default '',
prod_id int not null,
valid_flg      int not null DEFAULT 0,
adv_create_ts   datetime default now(),
primary key(adv_id),
index(adv_id),
foreign key (prod_id) references prod_info(prod_id) on delete cascade on update cascade
);


create table user_feedback
(
feedback_id   int not null auto_increment,
valid_flg      int not null DEFAULT 0,
user_id   int not null,
user_name   varchar(100) not null,
email       varchar(50) not null,
user_comment varchar(3000),
user_comment_ts  datetime default now(),
primary key(feedback_id),
index(feedback_id),
foreign key (user_id) references user(user_id) on delete cascade on update cascade
);

create table prod_profit_rate
(
profit_id   int not null auto_increment,
valid_flg      int not null DEFAULT 0,
profit_rate decimal(4,2) not null default 0,
profit_rate_create_ts  datetime default now(),
primary key(profit_id),
index(profit_id)
);

create table prod_price_range
(
prod_price_range_id   int not null auto_increment,
prod_id   int not null,
quantity_from1  int not null default 1,
quantity_to1    int not null default 99999999,
unit_price1       decimal(12,2) not null default 0,
imprinting_prices1 decimal(12,2) not null default 0,
setup_cost1 decimal(12,2) not null default 0,
freight_cost1 decimal(12,2) not null default 0,
quantity_from2  int not null default 0,
quantity_to2    int not null default 0,
unit_price2       decimal(12,2) not null default 0,
imprinting_prices2 decimal(12,2) not null default 0,
setup_cost2 decimal(12,2) not null default 0,
freight_cost2 decimal(12,2) not null default 0,
quantity_from3  int not null default 0,
quantity_to3    int not null default 0,
unit_price3       decimal(12,2) not null default 0,
imprinting_prices3 decimal(12,2) not null default 0,
setup_cost3 decimal(12,2) not null default 0,
freight_cost3 decimal(12,2) not null default 0,
quantity_from4  int not null default 0,
quantity_to4    int not null default 0,
unit_price4       decimal(12,2) not null default 0,
imprinting_prices4 decimal(12,2) not null default 0,
setup_cost4 decimal(12,2) not null default 0,
freight_cost4 decimal(12,2) not null default 0,
quantity_from5  int not null default 0,
quantity_to5    int not null default 0,
unit_price5       decimal(12,2) not null default 0,
imprinting_prices5 decimal(12,2) not null default 0,
setup_cost5 decimal(12,2) not null default 0,
freight_cost5 decimal(12,2) not null default 0,
prod_price_range_create_ts  datetime default now(),
primary key(prod_price_range_id),
index(prod_price_range_id),
foreign key (prod_id) references prod_info(prod_id) on delete cascade on update cascade
);

create view v_prod_price_range as
SELECT
	a.prod_price_range_id AS prod_price_range_id,
	a.prod_id AS prod_id,
	a.quantity_from1 AS quantity_from1,
	a.quantity_to1 AS quantity_to1,
	cast(a.unit_price1 *(1 + b.p_rate) AS DECIMAL (12, 2)) AS unit_price1,
	a.imprinting_prices1 AS imprinting_prices1,
	a.setup_cost1 AS setup_cost1,
	a.freight_cost1 AS freight_cost1,
	a.quantity_from2 AS quantity_from2,
	a.quantity_to2 AS quantity_to2,
	cast(a.unit_price2 *(1 + b.p_rate) AS DECIMAL (12, 2)) AS unit_price2,
	a.imprinting_prices2 AS imprinting_prices2,
	a.setup_cost2 AS setup_cost2,
	a.freight_cost2 AS freight_cost2,
	a.quantity_from3 AS quantity_from3,
	a.quantity_to3 AS quantity_to3,
	cast(a.unit_price3 *(1 + b.p_rate) AS DECIMAL (12, 2)) AS unit_price3,
	a.imprinting_prices3 AS imprinting_prices3,
	a.setup_cost3 AS setup_cost3,
	a.freight_cost3 AS freight_cost3,
	a.quantity_from4 AS quantity_from4,
	a.quantity_to4 AS quantity_to4,
	cast(a.unit_price4 *(1 + b.p_rate) AS DECIMAL (12, 2)) AS unit_price4,
	a.imprinting_prices4 AS imprinting_prices4,
	a.setup_cost4 AS setup_cost4,
	a.freight_cost4 AS freight_cost4,
	a.quantity_from5 AS quantity_from5,
	a.quantity_to5 AS quantity_to5,
	cast(a.unit_price5 *(1 + b.p_rate) AS DECIMAL (12, 2)) AS unit_price5,
	a.imprinting_prices5 AS imprinting_prices5,
	a.setup_cost5 AS setup_cost5,
	a.freight_cost5 AS freight_cost5,
	a.prod_price_range_create_ts AS prod_price_range_create_ts
FROM prod_price_range a
LEFT JOIN
(SELECT CASE WHEN isnull(min(prod_profit_rate.profit_rate)) THEN 0
        ELSE min(prod_profit_rate.profit_rate) * 0.01 END  AS p_rate
FROM prod_profit_rate WHERE valid_flg = 1 ) b ON 1=1
;


create table quote_system
(
quote_id bigint not null auto_increment,
quote_name varchar(300) not null default 'quote',
supplier_id  int not null,
user_id int not null,
prod_id   int not null,
prod_name varchar(100) not null default '',
prod_quantity int not null default 0,
imprint_info varchar(100) ,
special_instruction varchar(100) ,
lead_time varchar(200) not null default '',
colors varchar(100) default '',
user_perfer_unit_price decimal(12,2) not null default 0,
user_perfer_imprinting_prices decimal(12,2) not null default 0,
user_perfer_setup_cost decimal(12,2) not null default 0,
user_perfer_freight_cost decimal(12,2) not null default 0,
user_perfer_total decimal(12,2) not null default 0,
user_perfer_comment varchar(300) not null default '',
supplier_perfer_unit_price decimal(12,2) not null default 0,  #写到库里之前需要加上利润点
supplier_perfer_imprinting_prices decimal(12,2) not null default 0,
supplier_perfer_setup_cost decimal(12,2) not null default 0,
supplier_perfer_freight_cost decimal(12,2) not null default 0,
supplier_perfer_total decimal(12,2) not null default 0,
supplier_perfer_comment varchar(300) not null default '',
user_last_quote_time datetime,
supplier_last_quote_time datetime,
valid_flg      int not null DEFAULT 0,
quote_create_time datetime default now(),
primary key(quote_id),
index(quote_id),
foreign key (prod_id) references prod_info(prod_id) on delete cascade on update cascade,
foreign key (user_id) references user(user_id) on delete cascade on update cascade,
foreign key (supplier_id) references supplier(supplier_id) on delete cascade on update cascade
);



create table order_system
(
order_id bigint not null auto_increment,
client_order_id bigint not null ,#考虑用时间ts加上用户id
supplier_id  int not null,
user_id int not null,
prod_id   int not null,
prod_name varchar(100) not null default '',
prod_quantity int not null default 0,
imprint_info varchar(100) default '',
colors varchar(100) default '',
lead_time varchar(200) not null default '',
unit_price decimal(12,2) not null default 0,
imprinting_prices decimal(12,2) not null default 0,
setup_cost decimal(12,2) not null default 0,
freight_cost decimal(12,2) not null default 0,
total_price decimal(12,2) not null default 0,
need_pay_supplier decimal(12,2) not null default 0,
supplier_target_dt datetime,
user_comments varchar(500),
supplier_comments varchar(500),
order_stat int not null default 0, #0为默认，1为客户已经提交给供应商，2为供应商已经发货给客户，3为客户已提供反馈，4为关闭订单
valid_flg      int not null DEFAULT 0,
order_create_dt datetime,
primary key(order_id),
index(order_id),
foreign key (prod_id) references prod_info(prod_id) on delete cascade on update cascade,
foreign key (user_id) references user(user_id) on delete cascade on update cascade,
foreign key (supplier_id) references supplier(supplier_id) on delete cascade on update cascade
);


create table compliment_system
(
compliment_id int not null auto_increment,
user_id int not null,
prod_id   int not null,
compliment_rate int not null default 0,
user_compliment_comments varchar(3000),
user_compliment_time datetime,
primary key(compliment_id),
index(compliment_id),
index(prod_id),
index(user_id),
foreign key (prod_id) references prod_info(prod_id) on delete cascade on update cascade,
foreign key (user_id) references user(user_id) on delete cascade on update cascade
);

create table user_reward_ref
(
reward_ref_id int not null auto_increment,
reward_rate        decimal(5,2) not null default 0,
reward_desc         varchar(200),
user_reward_create_ts  datetime default now(),
primary key(reward_ref_id),
index(reward_ref_id)
);

create table supplier_rebate_ref
(
rebate_ref_id   int not null auto_increment,
supplier_points_from  int not null default 0,
supplier_points_to    int not null default 0,
rebate_rate decimal(5,2) not null default 0,
rebate_desc                  varchar(200),
supplier_level        int not null default 0,
supplier_rebate_create_ts  datetime default now(),
primary key(rebate_ref_id),
index(rebate_ref_id)
);

create table supplier_pts_hist
(
supplier_pts_hist_id bigint not null auto_increment,
supplier_id  int not null,
before_pts    int not null default 0,
after_pts     int not null default 0,
update_reason varchar(300),
pts_update_ts datetime default now(),
primary key(supplier_pts_hist_id),
index(supplier_pts_hist_id),
foreign key (supplier_id) references supplier(supplier_id) on delete cascade on update cascade
);

create table remind_interval
(
remind_interval int
);